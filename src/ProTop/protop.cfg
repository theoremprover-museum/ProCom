%% ATTENTION: This file has been generated automatically.
%%            Changes to this file may be overwritten.
%%            Consult INSTALL and Makefile for details.
%%
%% Last created: Thu Jul 6 11:04:23 MET DST 1995
%%      by user: gerd
%%      on host: upsilon

%----------------------------------------------------------
%- Store the version number from the Makefile.
%-
protop_version("1.69").

%----------------------------------------------------------
%- Declare where ProTop (main.pl) lives.
%-
protop_home("/u/home/procom").

%----------------------------------------------------------
%- Declare the path where Prolog files can be found.
%-
prover_system_path("/u/home/procom/ProTop").
prover_system_path("/u/home/procom/System").
prover_system_path("/u/home/procom/Prepare").
prover_system_path("/u/home/procom/Reductions").
prover_system_path("/u/home/procom/Normalform").
prover_system_path("/u/home/procom/Filter").
prover_system_path("/u/home/procom/ProCom").
prover_system_path("/u/home/procom/Capri").
prover_system_path("/u/home/procom/Otter").
prover_system_path("/u/home/procom/Setheo").
prover_system_path("/u/home/procom/Protein").
prover_system_path("/u/home/procom/Pool").

%----------------------------------------------------------
%- Declare the default options (search paths).
%- Those are reset when ProTop is started.
%-
default_option(input_path = ['Samples']).
default_option('report:style_path' = "/u/home/procom/inputs").
default_option('ProCom:link_path' = ['.','ProCom','/u/home/procom/ProCom']).
default_option('ProCom:capri_path' = ['.','Capri','/u/home/procom/Capri']).
default_option('tptp:home' = '/home/system/tptp/TPTP-v1.1.3/').
default_option('prove:red_path' = ['.','Red','/u/home/procom/Prepare']).
default_option('ProTop:path' = [".","Scripts","/u/home/procom/Scripts","\~/Scripts"]).
default_option(none).

%----------------------------------------------------------
%-  A list of ProTop commands is required for help.
%-
pt_command("end_of_file").
pt_command("end").
pt_command("stop").
pt_command("quit").
pt_command("exit").
pt_command("true").
pt_command("[]").
pt_command("fail").
pt_command("halt").
pt_command("include(File)").
pt_command("File").
pt_command("help").
pt_command("status").
pt_command("status(Part)").
pt_command("list(Part)").
pt_command("show(Part)").
pt_command("help(Part)").
pt_command("info(Part)").
pt_command("[Instruction1 | Instruction2]").
pt_command("Instruction1, Instruction2").
pt_command("Instruction1; Instruction2").
pt_command("repeat N times Command").
pt_command("for Var in Spec do Command").
pt_command("if Condition then Then else Else").
pt_command("if Condition then Then").
pt_command("not(Condition)").
pt_command("nl").
pt_command("write(Term)").
pt_command("writeln(Term)").
pt_command("printf(Format,Arguments)").
pt_command("exists(File)").
pt_command("find_file(File,Path,Extension,FullFile)").
pt_command("pwd").
pt_command("pwd(Dir)").
pt_command("cd(Dir)").
pt_command("ls").
pt_command("ls(Dir)").
pt_command("read_string(Prompt,String)").
pt_command("read_string(String)").
pt_command("read(Term)").
pt_command("read(Prompt,Term)").
pt_command("call(Goal)").
pt_command("Option = Value").
pt_command("reset_options").
pt_command("library_path(Path)").
pt_command("prove(InputFile)").
pt_command("prove(InputFile,OutFile)").
pt_command("report(Action)").
pt_command("define_table(Name,Spec)").
pt_command("remove_table(Name)").
pt_command("generate_report").
pt_command("generate_report(Files)").
pt_command("latex_report").
pt_command("make_report").
pt_command("make_report(Files)").
pt_command("op(A,B,C)").
pt_command("Macro := Code").
pt_command("delete_macro(Macro)").
pt_command("delete(macro(Macro))").
pt_command("defined(Macro)").
pt_command("Macro").
